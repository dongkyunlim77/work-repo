Problem,Description,Wrong Answer,
reverse_string,"Write a Python function called reverse_string that takes a string and returns the reverse of the string. For example, reverse_string('hello') should return 'olleh'.","def reverse_string(s):
     return s.reverse()",
,,"def reverse_string(s):
    for i in range(len(s) - 1, -1, -1):
        s += s[i]
    return s",
,,"def reverse_string(s): 
     reversed_s = """" 
     for char in s: 
       reversed_s += char",
,,"def reverse_string(s):
    return s[0:len(s)]",
,,"def reverse_string(s):
    return ''.join([s[i] for i in range(len(s))])",
is_palindrome,"Write a Python function called is_palindrome that checks if a given string is a palindrome. For example, is_palindrome('madam') should return True.","def is_palindrome(s):
    return s == reversed(s)",
,,"def is_palindrome(s):
    s = s.replace("" "", """")
    return s == s[::-1]",
,,"def is_palindrome(s):
    for i in range(len(s)):
        if s[i] != s[-i]:
            return False
    return True",
,,"def is_palindrome(s):
    return s.lower() == s.lower()[::-1]",
,,"def is_palindrome(s):
    s_list = list(s)
    return s_list == s_list.reverse()",
count_vowels,"Write a Python function called count_vowels that counts the number of vowels in a given string. For example, count_vowels('hellO') should return 2.","def count_vowels(s):
    return sum(1 for char in s if char in 'aeiou')",
,,"def count_vowels(s):
    vowels = 0
    for char in s:
        if char.lower() in 'aeiou':
            vowels += 1
    return vowels + 1",
,,"def count_vowels(s):
    return len([char for char in s if char in 'aeiouAEIOU'])","not wrong but maybe when we have correct but inefficient implementations, we can output a message explaining this"
,,"def count_vowels(s):
    vowels = ['a', 'e', 'i', 'o', 'u']
    return sum(char in vowels for char in s)",
,,"def count_vowels(s):
    vowels = 'aeiou'
    return sum([1 for char in s])",
fibonacci,"Write a Python function called fibonacci that returns the nth Fibonacci number. For example, fibonacci(5) should return 5.","def fibonacci(n):
    fib = [0, 1]
    for i in range(2, n):
        fib.append(fib[-1] + fib[-2])
    return fib[-1]",
,,"def fibonacci(n):
    a, b = 0, 1
    while b < n:
        a, b = b, a + b
    return b",
,,"def fibonacci(n):
    result = 1
    for i in range(2, n):
        result *= i
    return result",
,,"def fibonacci(n):
    fib_series = [0, 1]
    for i in range(2, n + 1):
        fib_series.append(fib_series[-2] + fib_series[-3])
    return fib_series[n]",
,,"def fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        a = b
        b = a + b
    return a",
sum_of_list,"Write a Python function called sum_of_list that takes a list of integers and returns the sum of its elements. For example, sum_of_list([1, 2, 3]) should return 6.","def sum_of_list(lst):
    total = 0
    for i in lst:
        total += total
    return total",
,,"def sum_of_list(lst):
    return lst[0] + sum(lst[1:])",
,,"def sum_of_list(lst):
    return sum([x + 1 for x in lst])",
,,"def sum_of_list(lst):
    total = 0
    for i in range(len(lst)):
        total += i
    return total",
,,"def sum_of_list(lst):
    return sum(lst) / len(lst)",
is_even,"Write a Python function called is_even that checks if a given integer is even. For example, is_even(4) should return True.","def is_even(n):
    return True if n % 2 else False",
,,"def is_even(n):
    return n % 2 != 1",correct but could be a strategic error an =d may warrant just a feedback
,,"def is_even(n):
    if n % 2 == 1:
        return True
    else:
        return False",
,,"def is_even(n):
    return (n & 1) == 1",
find_average,"Write a Python function called find_average that returns the average of a list of integers. For example, find_average([1, 2, 3]) should return 2.","def find_average(lst):
    return sum([x + 1 for x in lst]) / len(lst)",
,,"def find_average(lst):
    return sum(lst) // len(lst)",
,,"def find_average(lst):
    return (max(lst) + min(lst)) / 2",
,,"def find_average(lst):
    return sum(lst) / len(lst) if len(lst) != 0 else 0",
,,"def find_average(lst):
    return sum(lst) / len(lst) * 100",
find_unique_elements,"Write a Python function called find_unique_elements that returns the unique elements in a list. For example, find_unique_elements([1, 2, 2, 3]) should return [1, 3].","def find_unique_elements(lst):
    unique = []
    for i in lst:
        if lst.count(i) == 1:
            unique.append(i)
    return lst",
,,"def find_unique_elements(lst):
    return list(set(lst))",
,,"def find_unique_elements(lst):
    return [x for x in lst if lst.count(x) > 1]",
,,"def find_unique_elements(lst):
    return [x for i, x in enumerate(lst) if x not in lst[:i]]",
